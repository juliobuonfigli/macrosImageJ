/*Una de las ventajas de estos métodos a diferencia del natura que leí se hace evidente en movies ya que acá se puede arrancar de una imagen (no necesito stack) por lo que puedo lograr 
mejores resoluciones temporales
Barre la imagen y genera una nueva en la cada cada pixel tiene un valor igual a la correlacion entre esa coordenada y la PSF*/ 

iter=5000;
selectWindow("ggg1");
w = getWidth;              
h = getHeight;
ww=1/w;
wh=w*h;
wh2=wh-1;
size=sqrt(w*w+h*h);
w2=w-9;
umbral=0.1;

function PROMEDIO(vector, w, h)     //1: funcion para vectorizar imagenes                    
{
suma=0;  
for (i=0; i<h*w; i++)
	suma=suma+vector[i];
prom=suma/(w*h);
return prom;
}              

function VECTORIZAR(imagenAvectorizar, w, h)                      
{
selectWindow(imagenAvectorizar);
vector=newArray(w*h);
  i = 0;
  for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		{
		vector[i] = getPixel(x,y);
		i++;
		}
	}
return vector;
}

PSF=newArray(81);
PSF=VECTORIZAR("ggg2", 9, 9);
pPSF=PROMEDIO(PSF, 9, 9); 

a=newArray(w*h);
a=VECTORIZAR("ggg1", w, h) ;

for(j=0; j<81; j++)                                              
	denP=denP+(PSF[j]-pPSF)*(PSF[j]-pPSF);                                                                                                        
		      
b=newArray(w*h);
for(i=0; i<w*h; i++)
	b[i]=0;

movidas=0;

for(ii=0; ii<w*h; ii++)
	{
	Xi=ii%w;
	Yi=floor(ii*ww);
	if(Xi<w-9 && Yi<h-9)
		{			
	vector=newArray(81);
  	j = 0;
	k=ii;
  	for (y=0; y<9; y++)
		{
		for (x=0; x<9; x++)
			{
			vector[j] = a[k];
			j++; k++;
			}
		k=k+w2;
		}
	
	pvector=PROMEDIO(vector, 9, 9);
	
	numP=0;
	denV=0;

	for(j=0; j<81; j++)                                              
		{
		denV=denV+(vector[j]-pvector)*(vector[j]-pvector);                                                                                                        
		numP=numP+(vector[j]-pvector)*(PSF[j]-pPSF);
		}      

	corr=numP/sqrt(denP*denV);    ;         
	
	if(corr>0)
		b[ii]=65000*corr;
	
	movidas++;
		}
	showStatus(ii+"    "+movidas);
	//print(corr);
	}                       
print(movidas);
//corte=1000+slice;
newImage("Res", "16-bit random", w, h, 1);
selectWindow("Res");
i=0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		{
		setPixel(x,y, b[i]);
		i++;
		}
	} 
  

//run("Images to Stack", "method=[Copy (center)] name=Stack title=10 use");
       
