
iter=350000
w = getWidth;              
h = getHeight; 
pi=3.14;

function RADIO(ia, ib, w, h)                  //calcula la distancia entre las dos pixels escogidos al azar
{
	i=0;
    for(y=0; y<h; y++)                               
		{
		for(x=0; x<w; x++)
			{
			if(i==ia)
				{
				x1=x;
				y1=y;
				}
			if(i==ib)
				{
				x2=x;
				y2=y;
				}
			i++;					
			}
		}
return	(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
}


function VECTORIZAR(imagenAvectorizar, w, h)     //1: funcion para vectorizar imagenes                    
{
selectWindow(imagenAvectorizar);
vector=newArray(w*h);
  i = 0;
  for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		{
		vector[i] = getPixel(x,y);
		i++;
		}
	}
return vector;
}



a=newArray(w*h);
a=VECTORIZAR("green", w, h) ;
size=w*w+h*h;

j=0;
for(i=0; i<iter; i++)
	{
	do {
	ii=round(random*(w*h-1));  
	Xi=ii%w;
	Yi=floor(ii*w);
	do {
	r=round(random*3)+1;
	alfa=2*pi*random;
	Xf=round(r*cos(alfa))+Xi;
            Yf=round(r*sin(alfa))+Yi;
	fi=w*Yf+Xf;
	} while(fi<0 || fi>=w*h)
	j++;		
	} while(a[fi]>254 || a[ii]<1 || a[ii]>a[fi] || ii==fi || a[fi]-a[ii]>40) 
	j=0;
	
	a[fi]=a[fi]+1;
	a[ii]=a[ii]-1;
	
	showStatus(j+"      "+i);
	}                       

         
newImage("Res", "8-bit black", w, h, 1);        // imagen final: merge de estas tres
selectWindow("Res");
i=0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		{
		setPixel(x,y, a[i]);
		i++;
		}
	} 
