/*Si en un vector de tres pixels lineales generado al azar las intensidades aumentan progresivamente las mayores aumentan y las menores disminuyen
igual que anterior pero solo opera entre el primero y el último. Acá solo evaluo 3 y el cuarto lo opero sin evaluarlo*/ 

mult=1000000;
ITER=10;
iter=mult*ITER;
slices=1;
w = getWidth;              
h = getHeight;
ww=1/w;
wh=w*h;
wh2=wh-1;
size=sqrt(w*w+h*h);


function VECTORIZAR(imagenAvectorizar, w, h)                      
{
selectWindow(imagenAvectorizar);
vector=newArray(w*h);
  i = 0;
  for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		{
		vector[i] = getPixel(x,y);
		i++;
		}
	}
return vector;
}

		
a=newArray(w*h);

for(slice=0; slice<slices; slice++)
	{
	a=VECTORIZAR("ggg1", w, h) ;
	movidas=0;
	for(i=0; i<iter; i++)
		{
		inc=1;
		ii=round(random*wh2);  
		Xi=ii%w;
		Yi=floor(ii*ww);
		
		alfa=2*PI*random;
		x1=round(2*cos(alfa)); 
		y1=round(2*sin(alfa)); 	
		x2=round(3*cos(alfa));
		y2=round(3*sin(alfa));  
		x3=round(4*cos(alfa));
		y3=round(4*sin(alfa));  
		
		Xf1=Xi+x1;
		Yf1=Yi+y1;
		fi1=w*Yf1+Xf1;  	
		if(fi1>wh2)
			{fi1=wh2; inc=0;}
		if(fi1<0)
			{fi1=0; inc=0;}
	
		Xf2=Xi+x2;
		Yf2=Yi+y2;
		fi2=w*Yf2+Xf2;  	
		if(fi2>wh2)
			{fi2=wh2; inc=0;}
		if(fi2<0)
			{fi2=0; inc=0;}

		Xf3=Xi+x3;
		Yf3=Yi+y3;
		fi3=w*Yf3+Xf3;  	
		if(fi3>wh2)
			{fi3=wh2; inc=0;}
		if(fi3<0)
			{fi3=0; inc=0;}
	
		if(Xf1>wh2 || Xf1<0 || Xf2>wh2 || Xf2<0 || Xf3>wh2 || Xf3<0)
			inc=0;
		
								
		if(a[fi2]<a[fi1] && a[fi1]<a[ii])
			{
			a[fi3]=a[fi3]-2*inc;
			a[ii]=a[ii]+inc;
			movidas++;
			}
						
		showStatus(i+"    "+movidas+"     "+slice);
		}                       

	corte=1000+slice;
	newImage(corte, "16-bit random", w, h, 1);
	selectWindow(corte);
	i=0;
	for (y=0; y<h; y++)
		{
		for (x=0; x<w; x++)
			{
			setPixel(x,y, a[i]);
			i++;
			}
		} 
	}  

run("Images to Stack", "method=[Copy (center)] name=Stack title=10 use");
       
