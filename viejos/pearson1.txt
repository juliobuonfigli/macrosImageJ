
// CARGA DE DATOS

id1=getImageID();          //identificación de IDs
tamano=0;
figura=newArray(12);
for(i=id1-1000; i<id1+1000; i++)
	{
	if(isOpen(i))
		{
		selectImage(i);
		figura[tamano]=getTitle();
		tamano++;
		}		
	}

  Dialog.create("SETC");    //genero ventana de inicio
                                                                    
  Dialog.addChoice("Rojo:", figura);         
  Dialog.addChoice("Verde:", figura);          
  Dialog.addChoice("Azul:", figura);    
  Dialog.addChoice("Máscara:", figura);    
  
      Dialog.show();
   	rojo=Dialog.getChoice();
   	verde=Dialog.getChoice();
   	azul=Dialog.getChoice();
   	mascara=Dialog.getChoice();
   	

w = getWidth;                                  //cargo tamaño de imagen
h = getHeight;


function sumarPixInt(ventana)                     //Declaro una función que suma intensidades de todos los pixeles
{
selectWindow(ventana);       
   a = newArray(w*h);
   i = 0;
   suma=0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		a[i++] = getPixel(x,y);
	}
for(i=0; i<w*h; i++)
	{
	suma=suma+a[i];
	}
return suma;
}

setBatchMode(true);                   //por si quiero ver como se procesan las imágenes

imageCalculator("AND create", rojo, mascara);    //opero imagenes con la máscara
rename("rojoAndMascara");
imageCalculator("AND create", verde, mascara);  
rename("verdeAndMascara");
imageCalculator("AND create", azul, mascara);  
rename("azulAndMascara");

sumRojo=sumarPixInt("rojoAndMascara");                     //sumo intensidades en cada imagen
sumVerde=sumarPixInt("verdeAndMascara");
sumAzul=sumarPixInt("azulAndMascara");

pr=sumRojo/(w*h);                                    //calculo promedios de intensidad para cada imagen 
pv=sumVerde/(w*h);
pa=sumAzul/(w*h);

   numVA=0;                        //inicializo variables de coeficiente de pearson
   numRA=0; 
   nunRV=0;
   numTriple=0;
   denR=0;
   denV=0;
   denA=0;
  
selectWindow("rojoAndMascara");        //obtengo el valor de cada pixel para cada imagen y los transformo en vectores unidimensionales	
   r = newArray(w*h);    
   i = 0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		r[i++] = getPixel(x,y);
	}

selectWindow("verdeAndMascara");	
  v = newArray(w*h);
  i = 0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		v[i++] = getPixel(x,y);
	}

selectWindow("azulAndMascara");	   
  a = newArray(w*h);
  i = 0;
for (y=0; y<h; y++)
	{
	for (x=0; x<w; x++)
		a[i++] = getPixel(x,y);
	}


for(i=0; i<w*h; i++)                                     //calculo todas la series                
	{
	denR=denR+(r[i]-pr)*(r[i]-pr);                                             
	denV=denV+(v[i]-pv)*(v[i]-pv);
	denA=denA+(a[i]-pa)*(a[i]-pa);
	numVA=numVA+(v[i]-pv)*(a[i]-pa);
	numRA=numRA+(r[i]-pr)*(a[i]-pa);
	numRV=numRV+(r[i]-pr)*(v[i]-pv);
	numTriple=numTriple+(r[i]-pr)*(v[i]-pv)*(a[i]-pa);
	}

denRV=sqrt(denR*denV);                             //calculo coeficientes
denRA=sqrt(denR*denA);
denVA=sqrt(denA*denV);
denTriple=sqrt(denR*denV*denA);

PrRV=numRV/denRV;
PrRA=numRA/denRA;
PrVA=numVA/denVA;
PrTriple=numTriple/denTriple;

print("PrRV: " +PrRV);                           //muestro resultados                                     
print("PrRA: "+PrRA);
print("PrVA: "+PrVA);
print("PrTriple: "+PrTriple);









